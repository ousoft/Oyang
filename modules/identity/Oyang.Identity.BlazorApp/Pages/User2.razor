@page "/user2"

@using Oyang.Identity.Domain
@using Oyang.Identity.Application.User
@using Oyang.Identity.Application.User.Dtos
@inject IJSRuntime JSRuntime;
@inject NotifierService NotifierService
@inject IUserAppService UserAppService

<h3>用户管理</h3>

<form class="form-inline mb-2">
    <div class="input-group mr-2">
        <div class="input-group-prepend">
            <span class="input-group-text">@nameof(UserDto.LoginName)</span>
        </div>
        <input type="text" class="form-control" @bind="_getListInputDto.LoginName">
    </div>
    <button type="button" class="btn btn-primary mr-2" @onclick="NotifierService.OnPaginationChange">查找</button>
    <button type="button" class="btn btn-secondary mr-2" @onclick="AddModal">新增</button>
</form>
@if (!(_dataSource != null && _dataSource.Items != null))
{
    <p><em>Loading...</em></p>
}
else
{
    <BsDataGrid DataSource="_dataSource" OnPaginationChangeEvent="PaginationChange">
        <BsDataGridColumns>
            <BsDataGridColumn Name="@nameof(context.Id)" AllowSort="true" Header="@nameof(context.Id)">@context.Id</BsDataGridColumn>
            <BsDataGridColumn Name="@nameof(context.LoginName)" AllowSort="true" Header="@nameof(context.LoginName)">@context.LoginName</BsDataGridColumn>
            <BsDataGridColumn Name="@nameof(context.NickName)" AllowSort="false" Header="@nameof(context.NickName)">@context.NickName</BsDataGridColumn>
            <BsDataGridColumn Name="" AllowSort="false" Header="">
                <button class="btn btn-secondary btn-sm" @onclick="()=>Edit(context)">编辑</button>
                <button class="btn btn-secondary btn-sm">删除</button>
            </BsDataGridColumn>
        </BsDataGridColumns>
    </BsDataGrid>
}


@code {
    private GetListInputDto _getListInputDto;
    private Pagination<UserDto> _dataSource;

    private AddInputDto addInputDto;

    protected override void OnInitialized()
    {
        _getListInputDto = new GetListInputDto();
        _dataSource = new Pagination<UserDto>() { PageIndex = 1, PageSize = 10, SortField = "id", IsAscending = true };
        PaginationChange(_dataSource);
    }

    private void PaginationChange(Pagination e)
    {
        _getListInputDto.Bind(e);
        _dataSource = UserAppService.GetList(_getListInputDto);
    }

    private void AddModal()
    {
        JSRuntime.ModalShow("addModal");
    }

    private bool Add()
    {
        UserAppService.Add(addInputDto);
        return true;
    }


    private void Edit(UserDto dto)
    {
        JSRuntime.InvokeVoidAsync("alert", System.Text.Json.JsonSerializer.Serialize(dto));
    }
}
